% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{detect_dynamic_clusters}
\alias{detect_dynamic_clusters}
\title{Detect Dynamic clusters}
\usage{
detect_dynamic_clusters(
  Dynamic = Dynamic,
  LoessSpan = 0.05,
  MinFrstRange = 0.7,
  FiltMean = 0.15,
  Ncp = 10,
  MinCorr = 0.95,
  LeidenResol = 1,
  CorrType = "spearman"
)
}
\arguments{
\item{Dynamic}{Dynamic Frustration Object.}

\item{LoessSpan}{Parameter Î± > 0 that controls the degree of smoothing of the loess() function of model fit. Type: numeric. Default: 0.05.}

\item{MinFrstRange}{Frustration dynamic range filter threshold. 0 <= MinFrstRange <= 1. Type: numeric. Default: 0.7.}

\item{FiltMean}{Frustration Mean Filter Threshold. FiltMean >= 0. Type: numeric. Default: 0.15.}

\item{Ncp}{Number of principal components to be used in PCA(). Ncp >= 1. Type: numeric. Default: 10.}

\item{MinCorr}{Correlation filter threshold. 0 <= MinCorr <= 1. Type: numeric. Default: 0.95.}

\item{LeidenResol}{Parameter that defines the coarseness of the cluster. LeidenResol > 0. Type: numeric. Default: 1.}

\item{CorrType}{Type of correlation index to compute. Values: "pearson" or "spearman". Type: character. Default: "spearman".}
}
\value{
Dynamic Frustration Object and its Clusters attribute.
}
\description{
Detects residue modules with similar single-residue frustration dynamics.
It filters out the residuals with variable dynamics, for this, it adjusts a loess 
model with span = LoessSpan and calculates the dynamic range of frustration and the mean of single-residue frustration.
It is left with the residuals with a dynamic frustration range greater than the quantile defined by MinFrstRange and with a mean Mean <(-FiltMean) or Mean> FiltMean.
Performs an analysis of main components and keeps Ncp components, to compute the correlation(CorrType) between them and keep the residues that have greater correlation MinCorr and p-value> 0.05.
An undirected graph is generated and Leiden clustering is applied with LeidenResol resolution.
}
